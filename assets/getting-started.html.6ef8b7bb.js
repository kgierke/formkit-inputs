import{_ as u,r as t,o as l,c as r,d as a,w as e,a as n,b as s,e as p}from"./app.27b7d6e3.js";const d={},k=n("h1",{id:"how-to-use",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#how-to-use","aria-hidden":"true"},"#"),s(" How to use")],-1),m=n("h2",{id:"install-the-package",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#install-the-package","aria-hidden":"true"},"#"),s(" Install the package")],-1),g=n("p",null,"In order to use this package you have to install it first, use your preferred package manager to install it.",-1),h=n("div",{class:"language-bash ext-sh line-numbers-mode"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"npm"),s(),n("span",{class:"token function"},"install"),s(` @kgierke/formkit-inputs
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),v=n("div",{class:"language-bash ext-sh line-numbers-mode"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token comment"},"# Install it in your project"),s(`
`),n("span",{class:"token function"},"yarn"),s(),n("span",{class:"token function"},"add"),s(` @kgierke/formkit-inputs
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),f=p(`<h2 id="setup-the-plugin" tabindex="-1"><a class="header-anchor" href="#setup-the-plugin" aria-hidden="true">#</a> Setup the plugin</h2><p>After you&#39;ve installed the package it&#39;s time to set it up. The minimal setup requires you only to import the <code>createFormKitInputsPlugin</code> function and use the resulting output as plugin in your FormKit configuration. Below is an example of the minimal setup.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> createApp <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">&quot;./App.vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> defaultConfig<span class="token punctuation">,</span> plugin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@formkit/vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> createFormKitInputsPlugin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@kgierke/formkit-inputs&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> formKitInputPlugin <span class="token operator">=</span> <span class="token function">createFormKitInputsPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">;</span>
app
  <span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>
    plugin<span class="token punctuation">,</span>
    <span class="token function">defaultConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      plugins<span class="token operator">:</span> <span class="token punctuation">[</span>formKitInputPlugin<span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&quot;#app&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="passing-options" tabindex="-1"><a class="header-anchor" href="#passing-options" aria-hidden="true">#</a> Passing options</h2>`,4),b=n("code",null,"createFormKitInputsPlugin",-1),_={href:"/reference/configuration",target:"_blank",rel:"noopener noreferrer"},y=p(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> formKitInputPlugin <span class="token operator">=</span> <span class="token function">createFormKitInputsPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// Configure the plugin here</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="use-it" tabindex="-1"><a class="header-anchor" href="#use-it" aria-hidden="true">#</a> Use it</h2><p>Now you&#39;re all set up and can use the library input types in your project.</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FormKit</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>image<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>image<span class="token punctuation">&quot;</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Image<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,4);function q(w,x){const o=t("CodeGroupItem"),i=t("CodeGroup"),c=t("ExternalLinkIcon");return l(),r("div",null,[k,m,g,a(i,null,{default:e(()=>[a(o,{title:"NPM",active:""},{default:e(()=>[h]),_:1}),a(o,{title:"YARN"},{default:e(()=>[v]),_:1})]),_:1}),f,n("p",null,[s("The library can be configured by passing an configuration object to the "),b,s(" function. More details can be found in the "),n("a",_,[s("Configuration"),a(c)]),s(" section.")]),y])}const C=u(d,[["render",q],["__file","getting-started.html.vue"]]);export{C as default};
